# .github/workflows/build.yml
name: Build Radiomics Pipeline Executables
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]
  workflow_dispatch:  # Allows manual triggering
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy
        pip install pyinstaller
        
    - name: Install project dependencies
      run: |
        pip install -r requirements.txt
    
    - name: Build executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile \
          --name radiomics-pipeline-linux \
          --hidden-import=streamlit \
          --hidden-import=streamlit.web.cli \
          --hidden-import=streamlit.runtime \
          --hidden-import=streamlit.runtime.scriptrunner \
          --hidden-import=streamlit.components.v1 \
          --hidden-import=altair \
          --hidden-import=plotly \
          --hidden-import=pandas \
          --hidden-import=numpy \
          --hidden-import=pydicom \
          --hidden-import=SimpleITK \
          --hidden-import=radiomics \
          --hidden-import=sklearn \
          --hidden-import=scipy \
          --hidden-import=matplotlib \
          --hidden-import=seaborn \
          --collect-data streamlit \
          app.py
    
    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --name radiomics-pipeline-windows --hidden-import=streamlit --hidden-import=streamlit.web.cli --hidden-import=streamlit.runtime --hidden-import=streamlit.runtime.scriptrunner --hidden-import=streamlit.components.v1 --hidden-import=altair --hidden-import=plotly --hidden-import=pandas --hidden-import=numpy --hidden-import=pydicom --hidden-import=SimpleITK --hidden-import=radiomics --hidden-import=sklearn --hidden-import=scipy --hidden-import=matplotlib --hidden-import=seaborn --collect-data streamlit app.py
    
    - name: Build executable (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile \
          --name radiomics-pipeline-macos \
          --hidden-import=streamlit \
          --hidden-import=streamlit.web.cli \
          --hidden-import=streamlit.runtime \
          --hidden-import=streamlit.runtime.scriptrunner \
          --hidden-import=streamlit.components.v1 \
          --hidden-import=altair \
          --hidden-import=plotly \
          --hidden-import=pandas \
          --hidden-import=numpy \
          --hidden-import=pydicom \
          --hidden-import=SimpleITK \
          --hidden-import=radiomics \
          --hidden-import=sklearn \
          --hidden-import=scipy \
          --hidden-import=matplotlib \
          --hidden-import=seaborn \
          --collect-data streamlit \
          app.py
    
    - name: Upload artifacts (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: radiomics-pipeline-linux
        path: dist/radiomics-pipeline-linux
        retention-days: 30
    
    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: radiomics-pipeline-windows
        path: dist/radiomics-pipeline-windows.exe
        retention-days: 30
    
    - name: Upload artifacts (macOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: radiomics-pipeline-macos
        path: dist/radiomics-pipeline-macos
        retention-days: 30
